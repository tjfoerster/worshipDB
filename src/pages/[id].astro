---
import Lyrics from "../components/Lyrics.astro";
import Layout from "../layouts/Layout.astro";
import sqlite3 from 'sqlite3';
import { open } from 'sqlite';
import path from 'path';
import type { Song } from "../lib/types";

const { id } = Astro.params;

// Open the SQLite database file
const db = await open({
	filename: path.join(process.cwd(), 'downloaded.sqlite'),
	driver: sqlite3.Database
});

let song: Song & { authors: string } | undefined;
try {
    song = await db.get(`
        SELECT 
            songs.*, 
            GROUP_CONCAT(authors.display_name, ', ') as authors
        FROM 
            songs
        JOIN 
            authors_songs ON songs.id = authors_songs.song_id
        JOIN 
            authors ON authors_songs.author_id = authors.id
        WHERE 
            songs.id = ${id}
        GROUP BY
            songs.id;
    `);
} catch(err) {
    console.log(err);
}
---

<Layout title={song?.title || ""}>
    <h1 class="font-bold text-xl text-center mb-2 dark:text-white">{song?.title}</h1>
    <p class="italic text-center dark:text-white mb-6">{song?.authors}</p>
    <hr class="w-64 h-1 mx-auto my-8 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700" />
    <Lyrics xml={song?.lyrics || ""} />
    <hr class="w-64 h-1 mx-auto my-8 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700" />
    <p class="text-center text-sm sm:text-base text-gray-600 dark:text-gray-300 mb-2">{song?.copyright}</p>
    <p class="text-center text-sm sm:text-base text-gray-600 dark:text-gray-300 mb-2">CCLI: {song?.ccli_number}</p>
    <p class="text-center text-sm sm:text-base text-gray-600 dark:text-gray-300 mb-2">Zuletzt ge√§ndert: {song?.last_modified}</p>
</Layout>
